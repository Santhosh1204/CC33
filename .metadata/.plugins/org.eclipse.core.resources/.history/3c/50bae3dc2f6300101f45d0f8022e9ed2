package com.helpdesk.ticket.controller;

import java.util.List;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.helpdesk.ticket.dto.TicketDto;
import com.helpdesk.ticket.service.TicketService;

import lombok.RequiredArgsConstructor;


@RestController
@RequestMapping("/api/tickets")
@RequiredArgsConstructor
public class TicketController {
    private final TicketService service;

    @PostMapping
    public ResponseEntity<TicketDto> create(@RequestBody TicketDto dto) {
        return ResponseEntity.ok(service.createTicket(dto));
    }

    @PutMapping("/{id}")
    public ResponseEntity<TicketDto> update(@PathVariable Long id, @RequestBody TicketDto dto) {
        return ResponseEntity.ok(service.updateTicket(id, dto));
    }

    @PostMapping("/{id}/messages")
    public ResponseEntity<Void> sendMessage(@PathVariable Long id, @RequestParam String sender, @RequestBody String content) {
        service.sendMessage(id, sender, content);
        return ResponseEntity.ok().build();
    }

    @GetMapping
    public ResponseEntity<List<TicketDto>> listAll() {
        return ResponseEntity.ok(service.listTickets());
    }

    @GetMapping("/{id}")
    public ResponseEntity<TicketDto> getTicket(@PathVariable Long id) {
        return ResponseEntity.ok(service.getTicket(id));
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<Void> delete(@PathVariable Long id) {
        service.deleteTicket(id);
        return ResponseEntity.noContent().build();
    }
}
